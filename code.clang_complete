{
    // Specify common flags that will be passed to clang for EVERY build.
    "common_flags" : [
      // some example includes
      "-I/usr/include",
      "-I$project_base_path/src",
      // this is needed to include the correct headers for clang
      "-I/usr/lib/clang/$clang_version/include",
      "-Wall"
    ],
    // search for .clang_complete file up the tree. Use includes from it if found
    "search_clang_complete_file": true,

    // pick the clang binary used by the plugin. This is used to determine the
    // version of the plugin and pick correct libclang bindings.
    "clang_binary" : "clang++",

    // make plugin verbose
    "verbose" : true,

    // add folder with current file with `-I` flag
    "include_file_folder" : true,

    // add parent folder of the current file's one with `-I` flag
    "include_file_parent_folder" : true,

    // ignore triggers and try to complete after each character
    // WARNING: can be very slow
    "autocomplete_all" : false,

    // hide the completions generated by other plugins
    "hide_default_completions": false,

    "gutter_style": "color",

    "flags_sources": [
        {"file": "CMakeLists.txt"},
        {"file": "compile_commands.json"},
        {"file": ".clang_complete"},
    ],

    "use_target_compiler_built_in_flags": false,

    "show_type_info": true,
}